---
apiVersion: v1
kind: Service                    # Type of kubernetes resource
metadata:
  name: portal-demo-app          # Unique name of the resource
spec:
  type: ClusterIP                 # Expose the Pods by opening a port on each Node and proxying it to the service.
  ports:                         # Take incoming HTTP requests on port 3000 and forward them to the targetPort of 3000
  - name: http
    port: 3000
    targetPort: 3000
  selector:
    app: portal-demo-app            # Map any pod with label `app=portal-demo-app` to this service
---
apiVersion: apps/v1
kind: Deployment                 # Type of Kubernetes resource
metadata:
  name: portal-demo-app          # Unique name of the Kubernetes resource
spec:
  replicas: 3                    # Number of pods to run at any given time
  selector:
    matchLabels:
      app: portal-demo-app       # This deployment applies to any Pods matching the specified label
  template:                      # This deployment will create a set of pods using the configurations in this template
    metadata:
      labels:                    # The labels that will be applied to all of the pods in this deployment
        app: portal-demo-app
    spec:
      containers:
      - name: portal-demo-app-1
        image: bmutziu/portal-demo-app:1.0-alpha
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 100m
            memory: 1000Mi
        ports:
          - containerPort: 3000  # Should match the port number that the Angular application listens on
